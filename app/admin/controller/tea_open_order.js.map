{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\tea_open_order.js"
    ],
    "names": [
        "think",
        "require",
        "Base",
        "module",
        "exports",
        "indexAction",
        "user",
        "userInfo",
        "list",
        "model",
        "where",
        "shop_id",
        "field",
        "select",
        "list1",
        "alias",
        "join",
        "list2",
        "item",
        "id",
        "cat",
        "cat_id",
        "push",
        "success",
        "reserveAction",
        "params",
        "post",
        "data",
        "find",
        "logger",
        "info",
        "isEmpty",
        "fail",
        "status",
        "result",
        "update",
        "startAction",
        "start_time",
        "Date",
        "now",
        "uuid",
        "order_id",
        "user_id",
        "seatinfoAction",
        "yxd_seat_cat",
        "as",
        "on",
        "time_range",
        "goodsList",
        "price",
        "time_out_price",
        "ohter_out_price",
        "out_date",
        "other_out_date",
        "goodsPrice",
        "service",
        "tea",
        "total_price",
        "total_time_out_price",
        "total_ohter_out_price",
        "goods_price",
        "seat_id",
        "order",
        "goodsListAction",
        "selectGoodsAction",
        "goodsInfo",
        "seatInfo",
        "goods_id",
        "create_time",
        "add",
        "removeGoodsOrderAction",
        "order_status",
        "delete",
        "settlementAction",
        "isNaN",
        "Number",
        "discount_price",
        "pay_type",
        "console",
        "log",
        "toFixed",
        "complete_price",
        "seat_name",
        "name",
        "order_end_time",
        "room_price",
        "basics_price",
        "room_out_price",
        "room_server_price",
        "open_order_user_id",
        "complete_order_user_id",
        "remarks",
        "order_remarks",
        "goods_total_price",
        "guest_source",
        "db",
        "orderModel",
        "goodsOrderModel",
        "goodsOrderCount",
        "count",
        "startTrans",
        "rollback",
        "updateGoodsStatus",
        "commit",
        "e",
        "completeOrderAction",
        "seatModel",
        "updateStatus",
        "complete_time",
        "seatData",
        "updateSeat",
        "orderListAction",
        "page",
        "pageSize",
        "getPage",
        "getShopId",
        "orderLisCountAction",
        "guestSourceListAction",
        "type"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\tea_open_order.js",
    "sourcesContent": [
        "const { think } = require('thinkjs');\nconst Base = require('./base.js');\n\nmodule.exports = class extends Base {\n\n  async indexAction() {\n    const user = this.userInfo();\n    const list = await this.model('yxd_seat_cat').where({ shop_id: user.shop_id }).field('id, cat_name as name').select();\n    const list1 = await this.model('yxd_seat_list').alias('s').field('s.*, c.charging_type').where({ 's.shop_id': user.shop_id }).join([\n      'LEFT JOIN yxd_seat_cat as c ON c.id = s.cat_id'\n    ]).select();\n    const list2 = {};\n    for (const item of list) {\n      list2[item.id] = {\n        cat: item,\n        list: []\n      }\n    }\n    for (const item of list1) {\n      if (list2[item.cat_id]) list2[item.cat_id].list.push(item);\n    }\n    return this.success(list2);\n  }\n  /** 预定 或取消预定 */\n  async reserveAction() {\n    const params = this.post();\n    const data = await this.model('yxd_seat_list').where({ id: params.id }).find();\n    think.logger.info('查询结果', data);\n    if (think.isEmpty(data)) return this.fail('该座位不存在!');\n    if (data.status == 2) return this.fail('座位未结算!');\n    const status = data.status == 1 ? 0 : 1;\n    const result = await this.model('yxd_seat_list').where({ id: params.id }).update({ status });\n    if (!result) return this.fail('预定失败!')\n    return this.success(status);\n  }\n  /** 座位开始计费 */\n  async startAction() {\n    const params = this.post();\n    const data = await this.model('yxd_seat_list').where({ id: params.id }).find();\n    if (data.status == 2) return this.fail('座位已经开始计费!');\n    const start_time = Date.now();\n    const uuid = think.uuid('v1')\n    const user = this.userInfo();\n    const result = await this.model('yxd_seat_list').where({ id: params.id }).update({ status: 2, start_time, order_id: uuid, user_id: user.id });\n    if (result) return this.success({ start_time, order_id: uuid, status: 2 });\n    return this.fail('计费失败!');\n  }\n  /** 获取座位或者包间详情 */\n  async seatinfoAction() {\n    const params = this.post();\n    const info = await this.model('yxd_seat_list').alias('s')\n      .field('s.*, c.cat_name, c.basics_price, c.max_time, c.time_out_price,c.other_price,c.other_price_start_time,c.other_price_end_time,c.charging_type')\n      .where({ 's.id': params.id }).join({\n        yxd_seat_cat: {\n          join: 'left',\n          as: 'c',\n          on: ['cat_id', 'id']\n        }\n      }).find();\n    if (think.isEmpty(info)) return this.fail('该座位不存在!');\n    info.time_range = 0;\n    info.goodsList = []; // 商品列表\n    if (info.status == 0 || info.status == 1) {\n      return this.success(info);\n    }\n\n    const { price, time_out_price, ohter_out_price, out_date, other_out_date, goodsPrice } = await this.service(\"charging\", \"admin\").tea(info);\n    info.total_price = price;\n    info.total_time_out_price = time_out_price;\n    info.total_ohter_out_price = ohter_out_price;\n    info.out_date = out_date;\n    info.other_out_date = other_out_date;\n    info.goods_price = goodsPrice;\n    // 获取商品列表\n    info.goodsList = await this.model('yxd_seat_goods_order')\n      .alias('gr')\n      .field('gr.*,g.goods_name')\n      .join([\n        'LEFT JOIN yxd_tea_goods as g ON gr.goods_id = g.id'\n      ])\n      .where({ order_id: info.order_id, seat_id: info.id })\n      .select();\n    info.order = null; // 订单详情， 如果已结账的情况下\n    // 如果已结账\n    if (!think.isEmpty(info.order_id)) {\n      info.order = await this.model('yxd_tea_order').where({ order_id: info.order_id }).find();\n      info.order = think.isEmpty(info.order) ? null : info.order;\n    }\n    return this.success(info);\n  }\n  // 读取商品列表\n  async goodsListAction() {\n    const user = this.userInfo();\n    // 获取商品列表\n    const list = await this.model('yxd_tea_goods').where({ shop_id: user.shop_id }).order('sort DESC').select();\n    return this.success(list);\n  }\n\n  // 给座位添加计费物品\n  async selectGoodsAction() {\n    const params = this.post();\n    const user = this.userInfo();\n    const goodsInfo = await this.model('yxd_tea_goods').where({ id: params.id }).find();\n    const seatInfo = await this.model('yxd_seat_list').where({ id: params.seat_id }).find();\n    if (think.isEmpty(goodsInfo)) return this.fail('商品不存在!');\n    if (think.isEmpty(seatInfo)) return this.fail('座位不存在!');\n    if (seatInfo.status !== 2) return this.fail('当前座位未计费');\n    const data = {\n      shop_id: user.shop_id,\n      price: goodsInfo.price,\n      seat_id: seatInfo.id,\n      goods_id: goodsInfo.id,\n      order_id: seatInfo.order_id,\n      create_time: Date.now(),\n    }\n    const result = await this.model('yxd_seat_goods_order').add(data);\n    if (result) return this.success('添加成功!');\n    return this.success('添加失败!');\n  }\n  // 删除订单商品\n  async removeGoodsOrderAction() {\n    const params = this.post();\n    const user = this.userInfo();\n    const order = await this.model('yxd_tea_order').where({ order_id: params.order_id }).find();\n    if (!think.isEmpty(order) && order.status === 0) return this.success('订单已锁定!');\n    if (!think.isEmpty(order) && order.status === 1) return this.fail('订单已完成!');\n    const result = await this.model('yxd_seat_goods_order').where({ id: params.id, order_status: 0 }).delete();\n    return result ? this.success() : this.fail('删除失败!');\n  }\n  // 结算\n  async settlementAction() {\n    const params = this.post();\n    if (isNaN(Number(params.discount_price))) return this.fail('优惠价格格式错误');\n    params.discount_price = Number(params.discount_price);\n    const user = this.userInfo();\n    if (think.isEmpty(params.pay_type)) return this.fail('请选择支付方式!');\n    const pay_type = this.model('yxd_pay_type').where({id: params.pay_type}).find();\n    if (think.isEmpty(pay_type)) return this.fail('支付方式不存在!');\n    const info = await this.model('yxd_seat_list').alias('s')\n      .field('s.*, c.cat_name, c.basics_price, c.max_time, c.time_out_price,c.other_price,c.other_price_start_time,c.other_price_end_time,c.charging_type')\n      .where({ 's.id': params.id }).join({\n        yxd_seat_cat: {\n          join: 'left',\n          as: 'c',\n          on: ['cat_id', 'id']\n        }\n      }).find();\n    if (think.isEmpty(info)) return this.fail('此订单不存在!');\n    let order = await this.model('yxd_tea_order').where({ order_id: info.order_id }).find();\n    if (!think.isEmpty(order)) {\n      console.log('结算总价1', order);\n      if (order.status == 0) return this.success(order);\n      if (order.status == 1) return this.fail('无法操作，订单已完成!');\n    }\n    think.logger.info('结算信息', info)\n    const { price, time_out_price, ohter_out_price, out_date, other_out_date, goodsPrice } = await this.service(\"charging\", \"admin\").tea(info);\n    params.discount_price = Number(params.discount_price.toFixed(2));\n    const complete_price = Number(price) + Number(params.discount_price);\n    const data = {\n      order_id: info.order_id,\n      shop_id: info.shop_id,\n      seat_name: info.name,\n      total_price: price, // 计算总价\n      order_end_time: Date.now(),\n      room_price: info.basics_price, // 包间价格\n      room_out_price: time_out_price, // 包间超时费\n      room_server_price: ohter_out_price, // 包间服务费\n      open_order_user_id: info.user_id, // 开单用户\n      complete_order_user_id: user.id, // 结单用户\n      remarks: params.order_remarks, // 订单备注\n      discount_price: params.discount_price, // 优惠或者加价价格\n      complete_price, // 实际结算价格\n      goods_total_price: goodsPrice, // 商品总价\n      status: 0, // 订单锁定\n      pay_type: params.pay_type,\n      guest_source: think.isEmpty(params.guest_source) ? 1 : params.guest_source,\n    }\n    const db = this.model('yxd_tea_order').db();\n    const orderModel = this.model('yxd_tea_order').db(db);\n    const goodsOrderModel = this.model(\"yxd_seat_goods_order\").db(db);\n    const goodsOrderCount = await this.model('yxd_seat_goods_order').where({order_id: info.order_id, order_status: 0}).count('id');\n    try {\n      await orderModel.startTrans();\n      const result = await orderModel.add(data);\n      if (!result) {\n        await orderModel.rollback();\n        return this.fail('结算失败!');\n      }\n      const updateGoodsStatus = await goodsOrderModel.where({order_id: info.order_id}).update({order_status: 1});\n      if (updateGoodsStatus !== goodsOrderCount) {\n        await orderModel.rollback();\n        return this.fail('结算失败!');\n      }\n      await orderModel.commit();\n      order =  await this.model('yxd_tea_order').where({ order_id: info.order_id }).find();\n      console.log('结算总价', data);\n      return this.success(order)\n    } catch(e) {\n      await orderModel.rollback();\n      return this.fail('结算失败!');\n    }\n  \n  }\n  /** 完成订单确认收款 */\n  async completeOrderAction() {\n    const params = this.post();\n    const order = await this.model('yxd_tea_order').field('status').where({order_id: params.id}).find();\n    if (think.isEmpty(order)) return this.fail('订单不存在!');\n    const db = this.model('yxd_tea_order').db();\n    const orderModel = this.model('yxd_tea_order').db(db);\n    const seatModel = this.model('yxd_seat_list').db(db);\n    try {\n      await orderModel.startTrans();\n      const updateStatus = await orderModel.where({order_id: params.id}).update({status: 1, complete_time: Date.now()});\n      if (!updateStatus && order.status == 0) { \n        await orderModel.rollback(); \n        return this.fail('收款确认失败!');\n      }\n      const seatData = {\n        start_time: null,\n        order_id: null,\n        user_id: null,\n        status: 0,\n      }\n      const updateSeat = await seatModel.where({order_id: params.id}).update(seatData);\n      orderModel.commit();\n      return this.success();\n    } catch(e) {\n      await orderModel.rollback(); \n      return this.fail('收款确认失败!');\n    }\n    \n   \n\n  }\n  /**\n   * 获取已完成订单列表\n   */\n  async orderListAction() {\n    const [page, pageSize] = this.getPage();\n    const where = {}\n    where['o.shop_id'] = this.getShopId();\n    const list = await this.model('yxd_tea_order').alias('o').field('o.*, u.nickname, p.pay_name').where(where).order('order_end_time desc').join([\n      'LEFT JOIN sys_user as u ON u.id = o.complete_order_user_id',\n      'LEFT JOIN yxd_pay_type as p ON o.pay_type = p.id'\n    ]).page(page, pageSize).select();\n    return this.success(list);\n  }\n\n  // 获取订单列表\n  async orderLisCountAction() {\n    const count = await this.model('yxd_tea_order').where({shop_id: this.getShopId()}).count('id');\n    return this.success(count);\n  }\n  /** 客源 */\n  async guestSourceListAction() {\n    const list = await this.model('yxd_guest_source').where({type: 1}).select();\n    return this.success(list);\n  }\n  // async orderGoodListAction() {\n  //   const params = this.post();\n  //   if (isEmpty(params.order_id)) return this.fail('订单号错误!');\n  //   if (isEmpty(params.seat_id)) return this.fail('座位错误!');\n  //   const list = await this.model('yxd_seat_goods_order').where({order_id: params.order_id, seat_id: params.seat_id}).select();\n  //   return this.success(list);\n  // }\n};\n"
    ]
}