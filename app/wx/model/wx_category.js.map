{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\wx\\model\\wx_category.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Model",
        "getChildCategoryId",
        "parentId",
        "childIds",
        "where",
        "parent_id",
        "getField",
        "getCategoryWhereIn",
        "categoryId",
        "push",
        "addData",
        "param",
        "create_date",
        "datetime",
        "del_flag",
        "add",
        "addData2",
        "delData",
        "id",
        "delete",
        "delFlagData",
        "update",
        "update_date",
        "updateData",
        "pageData",
        "sql",
        "page",
        "current",
        "order",
        "isEmpty",
        "name",
        "data",
        "countSelect",
        "categoryList",
        "_data",
        "select",
        "i",
        "length",
        "item",
        "len",
        "child",
        "pageData2",
        "pid",
        "allData",
        "getData",
        "find"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\wx\\model\\wx_category.js",
    "sourcesContent": [
        "/**\n*分类\n*/\n'use strict';\nmodule.exports = class extends think.Model {\n  async getChildCategoryId(parentId) {\n    const childIds = await this.where({parent_id: parentId}).getField('id', 10000);\n    return childIds;\n  }\n\n  async getCategoryWhereIn(categoryId) {\n    const childIds = await this.getChildCategoryId(categoryId);\n    childIds.push(categoryId);\n    return childIds;\n  }\n\n  async addData(param){\n    param.create_date=think.datetime();\n    param.parent_id=0;\n    param.del_flag=0;\n    //param.id=think.uuid('v1');\n    await this.add(param);\n  }\n\n  async addData2(param){\n    param.create_date=think.datetime();\n    param.del_flag=0;\n    //param.id=think.uuid('v1');\n    await this.add(param);\n  }\n\n  async delData(param){\n    await this.where({id:param.id}).delete();\n  }\n\n  async delFlagData(param){\n    let id=param.id;\n    await this.where({id:id}).update({update_date:think.datetime(),del_flag:1});\n  }\n\n  async updateData(param){\n    let id=param.id;\n    param.update_date=think.datetime();\n    delete param.id;\n    delete param.parent_id;\n    delete param.create_date;\n    await this.where({id:id}).update(param);\n  }\n\n  async pageData(param){\n    let sql=this.page(param.current).order('sort_order').where({del_flag:0,parent_id:0});\n    if(!think.isEmpty(param.name)){\n      sql=sql.where({name:['like', '%'+param.name+'%']});\n    }\n    let data = await sql.countSelect();\n    return data;\n  }\n\n  async categoryList(){\n  \tlet _data=[];\n    let data=await this.order('sort_order').where({del_flag:0,parent_id:0}).select();\n    for (var i = 0; i < data.length; i++) {\t\t\n\t\tlet item=data[i];\n\t\tlet len =_data.push(item);\n        let child=await this.where({parent_id:item.id,del_flag:0}).order(\"sort_order\").select();\n\t\t_data[len - 1].child = child;\n    }\n    return data;\n  }\n\n\n  async pageData2(param){\n    let sql=this.page(param.current).order('sort_order').where({del_flag:0,parent_id:param.pid});\n    if(!think.isEmpty(param.name)){\n      sql=sql.where({name:['like', '%'+param.name+'%']});\n    }\n    let data = await sql.countSelect();\n    return data;\n  }\n\n  async allData(param){\n    let data=await this.where({del_flag:0}).select();\n    return data;\n  }\n\n  async getData(id){\n    return await this.where({id: id,del_flag:0}).find();\n  }\n};"
    ]
}